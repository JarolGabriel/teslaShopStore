---
import ProductSlideshow from "@/components/product/ProductSlideshow.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import '@/assets/styles/productSlideshow.css'
import { actions } from "astro:actions";


const {slug} = Astro.params

const { data, error } = await Astro.callAction(  actions.getProductBySlug,  slug ?? "");
if(error){
return Astro.redirect("/404")
}

const {product, images} = data;

const image = images[0].image.startsWith("http")
? images[0].image
: `${import.meta.env.PUBLIC_URL}/images/products/${images[0].image}`


---


<MainLayout
  title={product.title}
  description={product.description}
  image={image}
  >
  <!-- <h1>{product.title}</h1> -->

  <div class="grid grid-cols-1 md:grid-cols-3 w-full gap-4">
    <ProductSlideshow images={images.map((i: { image: string }) => i.image)} />

    <section>
      <h2 class="text-2xl font-bold">{product.title}</h2>
      <h2 class="font-bold">${product.price}</h2>

      <h3 class="mt-5">Tallas</h3>
      <ul class="flex gap-3">
        {
          product.sizes
            .split(',')
            .map((size: string) => <li data-size={size}>{size}</li>)
        }
      </ul>

      <h3 class="mt-5">Cantidad</h3>
      <div>
        <button class="btn-quantity">-</button>
        <input type="number" min="1" value="1" />
        <button class="btn-quantity">+</button>
      </div>

      <button class="mt-5 bg-blue-500 text-white p-3 w-full disabled:bg-gray-500"
        >Añadir al carrito</button
      >

      <h3 class="mt-10">Descripción</h3>
      <p>{product.description}</p>
    </section>
  </div>

  <input type="hidden" id="product-id" value={product.id} />
</MainLayout>


<script>
 import { itemInCart } from "@/store";
 import { CartCookiesClient } from "@/utils";
import { navigate } from "astro:transitions/client";

document.addEventListener("astro:page-load", () =>{

  
const sizeElements = document.querySelectorAll("li");


sizeElements.forEach((liElement)=>{
  liElement.addEventListener("click", ()=>{
    sizeElements.forEach((s) => s.classList.remove("selected-size"));
    liElement.classList.add("selected-size")
  })
})

const quantityInput = document.querySelector("input") as HTMLInputElement;
const productIdInput = document.querySelector("#product-id") as HTMLInputElement;

let quantity =1;

const [decrementButton, incrementButton, addCardButton] = document.querySelectorAll("button");

if(!incrementButton || !quantityInput) return


incrementButton.addEventListener("click", ()=>{
  quantity = Math.min(quantity + 1, 5);
  quantityInput.value = quantity.toString()
});

decrementButton.addEventListener("click", ()=>{
  quantity = Math.max(quantity - 1, 1);
  quantityInput.value = quantity.toString()
});

addCardButton.addEventListener("click" , async() =>{
const size = document.querySelector(".selected-size")?.textContent;
if(!size){
  return alert("selecione una talla")
}

addCardButton.disabled = true;

const cart = CartCookiesClient.addItem({
  productId: productIdInput.value,
  size: size,
  quantity: quantity
})

itemInCart.set(cart.length)

console.log(itemInCart.get())
// TODO: cambiar luego de usar lo view transition
// window.location.href = "/cart"

await navigate("/cart")

})
})



</script>